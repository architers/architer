<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>server-parent</artifactId>
        <groupId>com.bussiness</groupId>
        <version>1.0.0</version>
    </parent>
    <artifactId>search-server</artifactId>
    <name>search-server</name>
    <packaging>jar</packaging>
    <dependencies>
        <dependency>
            <groupId>com.architecture.ultimate</groupId>
            <artifactId>boot-starter-web-mvc</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.architecture.ultimate</groupId>
            <artifactId>elastic-search-dml</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.architecture.ultimate</groupId>
            <artifactId>elastic-search-model</artifactId>
            <version>1.0.0</version>
        </dependency>
        <dependency>
            <groupId>com.architecture.ultimate</groupId>
            <artifactId>elastic-search-mq-consumer</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.architecture.ultimate</groupId>
            <artifactId>test</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.architecture.ultimate</groupId>
            <artifactId>elastic-search-job-elastic</artifactId>
            <version>${project.version}</version>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <!-- 跳过单元测试 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>
            <!-- spring-boot-maven-plugin -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <fork>true</fork>
                    <mainClass>${start-class}</mainClass>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- fabric8 的 docker-maven-plugin -->
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <!--                <version>0.36.1</version>-->
                <!-- 全局配置 -->
                <configuration>
                    <!-- 配置远程 Docker 守护进程 url -->
                    <dockerHost>http://110.40.139.46:2375</dockerHost>
                    <!-- 镜像相关配置，支持多镜像 -->
                    <images>
                        <!-- 单个镜像配置 -->
                        <image>
                            <!-- 镜像名:版本号 -->
                            <name>${project.artifactId}:${project.version}</name>
                            <!--
                                镜像仓库（公共仓库、阿里云仓库、私有自建仓库）配置，用于推送/拉取镜像
                                如果不想推送至镜像仓库则无需配置
                            -->
                            <!--                            <registry>192.168.10.10:5000</registry>-->
                            <!-- 镜像 build 相关配置 -->
                            <build>
                                <!-- 使用 Dockerfile 文件，默认地址是 src/main/docker -->
                                <dockerFile>${project.basedir}/Dockerfile</dockerFile>
                                <!-- 或者指定地址例如：从项目根路径开始找 项目名/docker -->
                                <!--<dockerFile>${project.basedir}/docker/Dockerfile</dockerFile>-->
                                <!--
                                    配置构建镜像时所需要的资源
                                    配置项说明：http://maven.fabric8.io/#build-assembly-descriptor
                                -->
                                <assembly>
                                    <descriptorRef>artifact</descriptorRef>
                                </assembly>
                            </build>
                        </image>
                    </images>
                    <!-- 认证配置，用于镜像仓库认证 -->
                    <!--
                    <authConfig>
                        <username>用户名</username>
                        <password>密码</password>
                    </authConfig>
                    -->
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
